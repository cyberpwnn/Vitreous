
blockRegistry: {
  //   You can use this registry to add as many new ore types as you like using any
  // background block at all. Block models, textures, world generation, and other
  // properties are handled dynamically. These blocks will only spawn in whichever
  // block or block state is listed as the background block. The ores retain a mixture
  // of their original properties + those of their background.
  //   The basic syntax is like this: "<ore> <background>." For example, to spawn
  // coal ore inside of sand, you would type "coal_ore sand." Alternatively, you
  // can list out any number of ore blocks inside of a new or existing PropertyGroup
  // below and use its name in the place of "<ore>." Likewise, "<background>" can
  // be replaced with the name of a BlockGroup, as registered below.
  //   Some block and property groups have special names. Those are "all" and
  // "default." Using "all" in the place of either will gather all of the respective
  // entries from below and add them to the list dynamically. Using "default" in the
  // place of either will gather all of the entries that are listed *by default*.
  values: [
    all all
  ]

  blockGroups: {
    minecraft: [
      minecraft:stone
      minecraft:andesite
      minecraft:diorite
      minecraft:granite
      minecraft:deepslate
    ]

    create: [
      create:asurine
      create:crimsite
      create:limestone
      create:ochrum
      create:scorchia
      create:scoria
      create:veridium
    ]
  }

  propertyGroups: {
    minecraft: [
      minecraft:coal_ore
      minecraft:copper_ore
      minecraft:diamond_ore
      minecraft:emerald_ore
      minecraft:gold_ore
      minecraft:iron_ore
      minecraft:lapis_ore
      minecraft:redstone_ore
    ]

    create: [
      create:zinc_ore
    ]
  }

  // Whether to test the block registry for duplicate entries.
  checkForDuplicates: true
}

modSupport: {
  minecraft: true
  create: true
}

general: {
  // Whether to run transformations on the ore presets for backwards
  // compatibility.
  // Allowed Values: NEVER, ALWAYS, MOD_UPDATED
  updatePresets: MOD_UPDATED

  // Whether to forcibly disable dynamic block imitation features to
  // provide better compatibility with some platforms. Note that this
  // feature should get enabled automatically, if needed.
  forceCompatibilityMode: false
}

blocks: {
  // Variants will imitate the properties of their background blocks,
  // such as the ability to fall like sand or sustain leaves. Can be
  // Configured on an individual basis in the ore presets.
  bgImitation: true

  // Whether to suppress the ability for background blocks to duplicate
  // themselves. Enabling this may improve gameplay balance by not letting
  // ores spread in the world unexpectedly. Can be configured on an
  // individual basis in the ore presets.
  bgDuplication: true

  enableFurnaceRecipes: true

  // Whether ore variants will drop instead of original counterparts.
  variantsDrop: false

  // Whether ore variants will drop when using silk touch.
  variantsDropWithSilkTouch: true

  // Whether to allow silverfish to enter into any infested variants.
  mapInfestedVariants: true
}

tags: {
  // Whether to copy any tags at all. Globally toggles the copy feature.
  copyTags: true

  // Whether to copy any block tags at all for ore variants.
  copyBlockTags: true

  // Whether to copy any item tags at all for ore variants.
  copyItemTags: true

  // Whether tags should be copied from background blocks.
  copyBgTags: false

  // Whether tags should be copied from foreground blocks.
  copyFgTags: true

  // Whether regular tags should be copied for dense variant blocks and items.
  copyDenseTags: true
}

denseOres: {
  // Adds a dense variant of every ore. Drops 1-3 x each original drop.
  enabled: false

  // The 0-1 chance that dense ores will spawn instead of regular variants.
  // Range: 0.0 ~ 1.0
  chance: 0.09

  // The number of items to yield when smelting dense ores.
  // Range: > 0
  smeltingMultiplier: 2

  // The maximum multiple of items to drop when mining dense ores.
  // Range: > 1
  dropMultiplier: 3

  // The minimum multiple of items to drop when mining dense ores.
  // Range: > 1
  dropMultiplierMin: 1

  // If true, dense variants drop a random number between 1 and multiplier.
  randomDropCount: true
}

worldGen: {
  // Whether ores should spawn according to specific biomes vs. anywhere.
  biomeSpecific: true

  // Whether vanilla spawning of ores should be blocked.
  autoDisableOres: true

  // Whether vanilla spawning of stone variants should be blocked.
  autoDisableStone: true

  // Whether to spawn custom ore variants.
  enableOSVOres: true

  // Whether to spawn stone types with custom variables.
  enableOSVStone: true

  // Whether to use the vanilla datapack structure for distribution control in the
  // generated presets. When this setting is turned off, OSV will attempt to convert
  // foreign generator settings into a simpler, proprietary format, which may not
  // have perfect accuracy in terms of behavior imitation.
  highAccuracy: false

  // Add the IDs of any configured features you wish to disable here. Regardless
  // of which mod provides the feature, it will be disabled and not spawn in the
  // world. For a list of which features can be disabled by the mod, run
  // `/osv debug features` in game.
  disabledFeatures: [
    create:zinc_ore
  ]
}